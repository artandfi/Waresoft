@model Waresoft.Software

@{
    ViewData["Title"] = "Додати продукт";
}

<h4 id="test">Додати продукт</h4>
<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" novalidate>
            <input type="hidden" name="flag" value="0"/>
            <input type="hidden" name="devId" value="@ViewBag.DevId" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="DeveloperId" class="control-label"></label>
                <select asp-for="DeveloperId" class="form-control" asp-items="@ViewBag.DeveloperList"></select>
            </div>
            <div class="form-group" id="name">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input id="price" min="0" step="0.01" type="number" asp-for="Price" class="form-control" onpaste="return false" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Requirements" class="control-label"></label>
                <textarea asp-for="Requirements" class="form-control"></textarea>
                <span asp-validation-for="Requirements" class="text-danger"></span>
            </div>
            <table>
                <tr>
                    <td>
                        <input type="submit" value="Додати" class="btn btn-success" />
                    </td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>
                        <button type="button" class="btn btn-warning" data-toggle="modal" data-target="#confirm">
                            Назад до списку
                        </button>
                    </td>
                </tr>
            </table>
        </form>
    </div>
</div>

<div style="display:none" id="flag" value="0"></div>

<form method="get" asp-action="Index" asp-route-id="@ViewBag.DevId" asp-route-dummy="0">
    <div class="modal fade" id="confirm" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Попередження</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body delete-modal-body">
                    Ви впевнені, що хочете повернутися до списку? Незбережені дані будуть втрачені.
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-danger">Так</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Ні</button>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts
{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        window.addEventListener("load", function () {
            var p = this.document.getElementById("flag");
            p.value = -2;
            console.log(p.value);
        });
    </script>

    <script>
        $(function () {
            $('#price').keypress(function (e) {
                let allow_char = [46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57];
                if (allow_char.indexOf(e.which) !== -1) {
                }
                else {
                    console.log("invalid char");
                    return false;
                }
                console.log("len " + e.target.value.length);
                if (e.target.value.length === 0 && e.which === 46) {
                    return false;
                }

                var y = document.getElementById("flag");

                if (e.which === 46) {
                    if (y.value !== -2) {
                        console.log("point blocked, already is");
                        return false;
                    }
                    var x = document.getElementById("flag");
                    x.value = e.target.value.length;
                    console.log("value set on track: " + x.value);
                }

                let dec = e.target.value.indexOf(".");
                let tooLong = e.target.value.length > dec + 2;


                if (dec >= 0 && tooLong) {
                    console.log("long validation");
                    e.target.value = e.target.value.substr(0, e.target.value.length - 1)
                }
            });
        });

        $(function () {
            $('#price').keydown(function (e) {
                if (e.keyCode === 8) {
                    var y = document.getElementById("flag");
                    console.log(this.value.length);
                    console.log(y.value);
                    if (y.value === this.value.length) {
                        y.value = -2;
                        console.log(y.value);
                    }
                }
            });
        });
    </script>
}
